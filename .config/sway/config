# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.
# Find it online at https://man.archlinux.org/man/sway.5.en
# https://man.archlinux.org/man/sway-bar.5.en
#
# This configuration is made by myself and is my first one
# It still needs to be organized properly
# It sill needs some improvments
# - Mode for changing gaps
# - Mode for changing red light
# - Use pulseaudio instead of alsamixer maybe
# - the launcher isn't the best one, I'm looking for another one that can launch Flatpaks
# - maybe if i can use variable and shell script i can automate the cycle through 
# the different dual display configurations
# - I'm planing to build a gtk based menu similar to the GNOME one on the top right corner
#
# To display logs and visualise info
# libinput debug-events
#
### Autorization management from lxde (because Gnome-polkit doesn't work outside)
#
exec lxpolkit
#exec /usr/libexec/kf5/polkit-kde-authentication-agent-1
# Kde polkit agent support wayland but maybe you should add a special rule for this windows
#
### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
#set $term alacritty
# Foot might be a better option
exec foot --server
set $term footclient
#
### Alternating layout
#
# Started by default
exec python ~/.config/sway/alternatingLayout.py
mode "Alternating Layout" {
    # Stop
    bindsym c exec pkill -f alternatingLayout.py
    # Start again
    bindsym a exec python ~/.config/sway/alternatingLayout.py
    #
	bindsym Return mode "default"
	bindsym Escape mode "default"
}
bindsym $mod+alt+a mode "Alternating Layout"                                                                                                                                                                                      
# This mode is deprecated since you should use the fuzzel menu now                                                                                                                                                                
bindsym $mod+a exec python ~/.config/sway/layoutMenu.py    
#
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu fuzzel -f JetBrainsMono -C ebcb8bff -b 1d1f21ff -T footclient -B 3 -m a3be8cff -t 88c0d0ff -S d8dee9ff -s bf616aff --show-actions
#
# Ricing
#
#hide_edge_borders smart
default_border pixel 3
#default_border none
gaps inner 10
gaps outer 10
default_floating_border none

client.focused #88c0d0 #88c0d0 #1d1f21 #88c0d0 #88c0d0
client.focused_inactive #1d1f21 #1d1f21 #88c0d0 #1d1f21 #1d1f21
client.unfocused #1d1f21 #1d1f21 #88c0d0 #1d1f21 #1d1f21
client.urgent #1d1f21 #d08770 #d8dee9 #d08770 #d08770

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
bindsym $mod+z exec python ~/.config/sway/fuzzelPowerMenu.py
#
### Output configuration
#
output * bg /home/pugnace/Pictures/Wallpapers/adwaitaDark2.jpg fill
output Virtual-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
#
#
### Input configuration
#
input type:touchpad {
	# Enable tap to click
    tap enabled
    # Set the scroll to be natural instead of reverse
    natural_scroll enabled
}
input "1:1:AT_Translated_Set_2_keyboard" {
	xkb_layout be
   }
Input "10874:35407:CASUE_USB_KB" {
	xkb_layout be
   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
#
### Key bindings
#
# Basics:
#
	# Start Firefox
    bindsym $mod+b exec firefox
    
    # Start a terminal
    bindsym ctrl+alt+t exec $term
    bindsym $mod+return exec $term
    
    # Start Nautilus
    bindsym $mod+f exec nautilus

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+d exec $menu
    
    # Screenshot
    bindsym Print exec grim
    bindsym $mod+Print exec grim -g "$(slurp)" - | wl-copy
    
    # Brightness
    bindsym F5 exec light -U 5
    bindsym F6 exec light -A 5
    bindsym XF86MonBrightnessDown exec light -U 5
    bindsym XF86MonBrightnessUp exec light -A 5

    # Media keys
    # With specific keys on laptop keyboard
	bindsym XF86AudioMute exec amixer -D pipewire sset Master toggle
    bindsym XF86AudioLowerVolume exec amixer -D pipewire sset Master 1%-
    bindsym XF86AudioRaiseVolume exec amixer -D pipewire sset Master 1%+
	# With Function keys on external keyboard
    bindsym F1 exec amixer -D pipewire sset Master toggle
    bindsym F2 exec amixer -D pipewire sset Master 1%-
    bindsym F3 exec amixer -D pipewire sset Master 1%+
    bindsym F4 exec amixer -D pipewire sset Capture toggle
    
    # Calculator
	bindsym F12 exec gnome-calculator
	bindsym XF86Calculator exec gnome-calculator

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaymsg exit

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
    
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+ampersand workspace number 1
    bindsym $mod+eacute workspace number 2
    bindsym $mod+quotedbl workspace number 3
    bindsym $mod+apostrophe workspace number 4
    bindsym $mod+parenleft workspace number 5
    bindsym $mod+section workspace number 6
    bindsym $mod+egrave workspace number 7
    bindsym $mod+exclam workspace number 8
    bindsym $mod+ccedilla workspace number 9
    bindsym $mod+agrave workspace number 10
    # Move focused container to workspace
    bindsym $mod+1 move container to workspace number 1
    bindsym $mod+2 move container to workspace number 2
    bindsym $mod+3 move container to workspace number 3
    bindsym $mod+4 move container to workspace number 4
    bindsym $mod+5 move container to workspace number 5
    bindsym $mod+6 move container to workspace number 6
    bindsym $mod+7 move container to workspace number 7
    bindsym $mod+8 move container to workspace number 8
    bindsym $mod+9 move container to workspace number 9
    bindsym $mod+0 move container to workspace number 10
    # Move to relative workspaces
    bindsym $mod+ctrl+h workspace prev
    bindsym $mod+ctrl+l workspace next
    bindsym $mod+ctrl+Left workspace prev
    bindsym $mod+ctrl+Right workspace next
    bindsym $mod+Shift+ctrl+Left move container to workspace prev
    bindsym $mod+Shift+ctrl+Right move container to workspace next
    
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Multiple monitor
#	
	output HDMI-A-1 res 1920x1080
	output HDMI-A-1 pos 0 0
#	output eDP-1 disable
	output eDP-1 enable
	# Set the shortcut to change between 2 configuration of multiple monitor
    bindsym $mod+p output eDP-1 enable
    bindsym $mod+Shift+p output eDP-1 disable
# Uncomment this if you are runing a laptop
#bindswitch --reload --locked lid:on output eDP-1 disable                                                    
#bindswitch --reload --locked lid:off output eDP-1 enable        
#
# Red lights
#
#exec_always gammastep 

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+Shift+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+shift+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+Shift+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+equal scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"
#
#
# Gap changing
#
#
mode "gapSet" {
	bindsym Right gaps inner all plus 2
	bindsym Left gaps inner all minus 2
	bindsym $right gaps inner all plus 2
	bindsym $left gaps inner all minus 2
	
	bindsym Up gaps outer all plus 2
	bindsym Down gaps outer all minus 2
	bindsym $up gaps outer all plus 2
	bindsym $down gaps outer all minus 2
	
	bindsym Return mode "default"
	bindsym Escape mode "default"
}
bindsym $mod+Shift+g mode "gapSet"
#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# Find it online at https://man.archlinux.org/man/sway-bar.5.en
bar {
	swaybar_command waybar
	# Specify the mouse button to click on the tray icon
#	tray_bindcode 272 Activate 
    # When the status_cmmmand prints a new line tm stdout, swaybar updates.
    # The default just shows the current date and time.
#	status_command while date +'%d-%m-%Y | %H:%M:%S | ' ;  do sleep 1; done
	# You can use i3blocks to add specific blocks on the sway status bar
#	#status_command i3blocks -c ~/.config/sway/i3Block.config
#	font JetBrains Mono Regular 12
#	gaps 10
#	height 20
#   position top
#    colors {
#		background #bf616a 
#       statusline #1d1f21
#		focused_workspace #88c0d0 #88c0d0 #1d1f21
#       inactive_workspace #1d1f21 #1d1f21 #bf616a
#       active_workspace #88c0d0 #1d1f21 #bf616a
#    }
}

include /etc/sway/config.d/*
